plugins {
    id 'java'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group 'fr.milekat'
version '1.0.4-SNAPSHOT'

ext {
    githubOwner = 'tutur1004'
    repository = 'MilekatUtils'
}

jar {
    actions = []
    dependsOn('shadowJar')
}

shadowJar{
    getArchiveClassifier().set(null)

    //  Utils
    relocate 'org.json', 'fr.milekat.utils.lib.json'
    relocate 'org.yaml.snakeyaml', 'fr.milekat.utils.lib.snakeyaml'
    relocate 'com.zaxxer.hikari', 'fr.milekat.utils.lib.hikaricp'
}

repositories {
    mavenCentral()
    maven { url = "https://oss.sonatype.org/content/repositories/snapshots/" }
    maven { url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/" }
}

compileJava.options.encoding = 'UTF-8'

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'

    //  Annotation
    compileOnly group: 'org.jetbrains', name: 'annotations', version: '24.0.1'

    //  Utils
    implementation group: 'org.json', name: 'json', version: '20240303'
    implementation group: 'org.yaml', name: 'snakeyaml', version: '2.2'

    //  Storage clients
    implementation group: 'com.zaxxer', name: 'HikariCP', version: '4.0.3'
    compileOnly group: 'com.mysql', name: 'mysql-connector-j', version: '8.3.0'
    compileOnly group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '3.3.3'
    compileOnly group: 'org.postgresql', name: 'postgresql', version: '42.7.3'
    compileOnly group: 'co.elastic.clients', name: 'elasticsearch-java', version: '8.12.2'
}

test {
    useJUnitPlatform()
    filter {
        includeTestsMatching "*Test"
    }
}

configurations {
    testImplementation.extendsFrom compileOnly
}

java {

    withJavadocJar()
    withSourcesJar()
}

// Force character encoding
tasks.withType(Javadoc).configureEach {
    options.encoding = 'UTF-8'
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/${githubOwner}/${repository}")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            artifactId = 'milekat-utils'
            from(components.java)
        }
    }
}