plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group 'fr.milekat'
version '1.7.1-SNAPSHOT'

ext {
    githubOwner = 'tutur1004'
    repository = 'MilekatUtils'
}

jar {
    actions = []
    dependsOn('shadowJar')
}

shadowJar{
    getArchiveClassifier().set(null)

    //  Utils
    relocate 'org.json', 'fr.milekat.utils.lib.json'
    relocate 'org.yaml.snakeyaml', 'fr.milekat.utils.lib.snakeyaml'
    relocate 'com.zaxxer.hikari', 'fr.milekat.utils.lib.hikaricp'
    relocate 'org.slf4j', 'fr.milekat.utils.lib.slf4j'
}

repositories {
    mavenCentral()
    maven { url = "https://oss.sonatype.org/content/repositories/snapshots/" }
    maven { url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/" }
}

compileJava.options.encoding = 'UTF-8'

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.11.4'

    //  Annotation
    compileOnly group: 'org.jetbrains', name: 'annotations', version: '26.0.2'

    //  Minecraft
    compileOnly group: 'org.spigotmc', name: 'spigot-api', version: '1.17.1-R0.1-SNAPSHOT'

    //  Utils
    implementation group: 'org.json', name: 'json', version: '20250517'
    implementation group: 'org.yaml', name: 'snakeyaml', version: '2.5'

    //  Storage clients
    implementation group: 'com.zaxxer', name: 'HikariCP', version: '7.0.2'
    compileOnly group: 'com.mysql', name: 'mysql-connector-j', version: '9.4.0'
    compileOnly group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '3.5.5'
    compileOnly group: 'org.postgresql', name: 'postgresql', version: '42.7.7'

    compileOnly group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.18.3'
    compileOnly group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.18.3'
    compileOnly group: 'co.elastic.clients', name: 'elasticsearch-java', version: '9.1.4'

    //  Messaging clients
    compileOnly group: 'com.rabbitmq' , name: 'amqp-client', version: '5.26.0'
}

test {
    useJUnitPlatform()
    filter {
        includeTestsMatching "*Test"
    }
}

configurations {
    testImplementation.extendsFrom compileOnly
}

java {
    withJavadocJar()
    withSourcesJar()
}

// Force character encoding
tasks.withType(Javadoc).configureEach {
    options.encoding = 'UTF-8'
    options.tags = [ "apiNote", "implNote", "implSpec" ]
}

publishing {
    publications {
        maven(MavenPublication) {
            artifactId = 'milekat-utils'
            from components.java

            pom {
                name = 'MilekatUtils'
                description = 'Utils for Milekat plugins'
                url = 'https://github.com/tutur1004/MilekatUtils'

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }

                developers {
                    developer {
                        id = 'milekat'
                        name = 'arthur'
                        email = 'arthur@milekat.fr'
                    }
                }

                scm {
                    connection = 'scm:git:git://github.com/tutur1004/MilekatUtils.git'
                    developerConnection = 'scm:git:ssh://github.com/tutur1004/MilekatUtils.git'
                    url = 'https://github.com/tutur1004/MilekatUtils'
                }
            }
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/${githubOwner}/${repository}")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
        maven {
            name = "StagingDeploy"
            url = layout.buildDirectory.dir('staging-deploy')
        }
    }
}

signing {
    // Only apply signing when it's not a snapshot version
    if (!version.endsWith('SNAPSHOT')) {
        sign publishing.publications
    }
}
